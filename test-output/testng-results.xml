<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="7" passed="1" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[TC1]]>
    </line>
    <line>
      <![CDATA[TC2]]>
    </line>
    <line>
      <![CDATA[TC3]]>
    </line>
  </reporter-output>
  <suite started-at="2022-12-10T14:01:27 IST" name="Suite" finished-at="2022-12-10T14:01:27 IST" duration-ms="92">
    <groups>
    </groups>
    <test started-at="2022-12-10T14:01:27 IST" name="Test" finished-at="2022-12-10T14:01:27 IST" duration-ms="92">
      <class name="scripts.Test1">
        <test-method is-config="true" signature="confidBS()[pri:0, instance:scripts.Test1@17f7cd29]" started-at="2022-12-10T14:01:27 IST" name="confidBS" finished-at="2022-12-10T14:01:27 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confidBS -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripts.Test1@17f7cd29]" started-at="2022-12-10T14:01:27 IST" name="openApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="tc1()[pri:0, instance:scripts.Test1@17f7cd29]" started-at="2022-12-10T14:01:27 IST" name="tc1" finished-at="2022-12-10T14:01:27 IST" duration-ms="10" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC1]]>
            </line>
          </reporter-output>
        </test-method> <!-- tc1 -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.Test1@17f7cd29]" started-at="2022-12-10T14:01:27 IST" name="closeApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc1 status=SUCCESS method=Test1.tc1()[pri:0, instance:scripts.Test1@17f7cd29] output=TC1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="configAS()[pri:0, instance:scripts.Test1@17f7cd29]" started-at="2022-12-10T14:01:27 IST" name="configAS" finished-at="2022-12-10T14:01:27 IST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- scripts.Test1 -->
      <class name="scripts.Test3">
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripts.Test3@58a9760d]" started-at="2022-12-10T14:01:27 IST" name="openApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="tc3()[pri:0, instance:scripts.Test3@58a9760d]" started-at="2022-12-10T14:01:27 IST" name="tc3" finished-at="2022-12-10T14:01:27 IST" duration-ms="7" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipped
at scripts.Test3.tc3(Test3.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
            <line>
              <![CDATA[TC3]]>
            </line>
          </reporter-output>
        </test-method> <!-- tc3 -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.Test3@58a9760d]" started-at="2022-12-10T14:01:27 IST" name="closeApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc3 status=SKIP method=Test3.tc3()[pri:0, instance:scripts.Test3@58a9760d] output=TC3]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripts.Test3 -->
      <class name="scripts.Test2">
        <test-method signature="tc2()[pri:0, instance:scripts.Test2@7530ad9c]" started-at="2022-12-10T14:01:27 IST" name="tc2" finished-at="2022-12-10T14:01:27 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at scripts.Test2.tc2(Test2.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[TC2]]>
            </line>
          </reporter-output>
        </test-method> <!-- tc2 -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripts.Test2@7530ad9c]" started-at="2022-12-10T14:01:27 IST" name="openApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripts.Test2@7530ad9c]" started-at="2022-12-10T14:01:27 IST" name="closeApp" finished-at="2022-12-10T14:01:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc2 status=FAILURE method=Test2.tc2()[pri:0, instance:scripts.Test2@7530ad9c] output=TC2]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripts.Test2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
